{"version":3,"sources":["runtime.js"],"names":["define","Utils","Exception","a","b","c","d","wrapProgram","container","i","fn","data","declaredBlockParams","blockParams","depths","prog","context","options","currentDepths","nullContext","concat","helpers","partials","executeDecorators","program","depth","length","noop","decorator","props","extend","checkRevision","compilerInfo","compilerRevision","currentRevision","COMPILER_REVISION","LAST_COMPATIBLE_COMPILER_REVISION","runtimeVersions","REVISION_CHANGES","compilerVersions","template","templateSpec","env","main","main_d","VM","compiler","templateWasPrecompiledWithCompilerV7","strict","obj","name","loc","lookupProperty","parent","propertyName","result","Object","prototype","hasOwnProperty","call","resultIsAllowed","protoAccessControl","lookup","len","lambda","current","escapeExpression","invokePartial","partial","hash","ids","resolvePartial","this","extendedOptions","hooks","compile","compilerOptions","indent","lines","split","l","join","ret","programs","programWrapper","value","_parent","mergeIfNeeded","param","common","seal","_setup","useData","createFrame","root","initData","useBlockParams","undefined","useDepths","isTop","decorators","mergedHelpers","keys","forEach","helperName","helper","wrapHelper","passLookupPropertyOption","wrapHelpersToPassLookupProperty","usePartial","useDecorators","createProtoAccessControl","keepHelperInHelpers","allowCallsToHelperMissing","moveHelperToHooks","_child","currentPartialBlock","partialBlock","contextPath","Function"],"mappings":";;;;;;;AAAAA,QACI,UACA,cACA,SACA,YACA,wBACA,2BACD,SAAUC,EAAOC,EAAWC,EAAGC,EAAGC,EAAGC,GACpC,aAkLA,SAASC,EAAYC,EAAWC,EAAGC,EAAIC,EAAMC,EAAqBC,EAAaC,GAC3E,SAASC,EAAKC,EAASC,MACnB,IAAIC,EAAgBJ,EAIpB,OAHIA,GAAUE,GAAWF,EAAO,IAAQE,IAAYR,EAAUW,aAA6B,OAAdL,EAAO,KAChFI,GAAiBF,GAASI,OAAON,IAE9BJ,EAAGF,EAAWQ,EAASR,EAAUa,QAASb,EAAUc,SAAUL,EAAQN,MAAQA,EAAME,IAAgBI,EAAQJ,aAAaO,OAAOP,GAAcK,GAMzJ,OAJAH,EAAOQ,EAAkBb,EAAIK,EAAMP,EAAWM,EAAQH,EAAME,IACvDW,QAAUf,EACfM,EAAKU,MAAQX,EAASA,EAAOY,OAAS,EACtCX,EAAKF,YAAcD,GAAuB,EACnCG,EA2CX,SAASY,IACL,MAAO,GASX,SAASJ,EAAkBb,EAAIK,EAAMP,EAAWM,EAAQH,EAAME,GAC1D,GAAIH,EAAGkB,UAAW,CACd,IAAIC,KACJd,EAAOL,EAAGkB,UAAUb,EAAMc,EAAOrB,EAAWM,GAAUA,EAAO,GAAIH,EAAME,EAAaC,GACpFb,EAAM6B,OAAOf,EAAMc,GAEvB,OAAOd,EAcX,OACIgB,cAvQJ,SAAuBC,GACnB,MAAMC,EAAmBD,GAAgBA,EAAa,IAAM,EAAGE,EAAkB/B,EAAEgC,kBACnF,KAAIF,GAAoB9B,EAAEiC,mCAAqCH,GAAoB9B,EAAEgC,mBAArF,CAGA,GAAIF,EAAmB9B,EAAEiC,kCAAmC,CACxD,MAAMC,EAAkBlC,EAAEmC,iBAAiBJ,GAAkBK,EAAmBpC,EAAEmC,iBAAiBL,GACnG,MAAM,IAAI/B,EAAU,6IAAoJmC,EAAkB,oDAAsDE,EAAmB,MAEnQ,MAAM,IAAIrC,EAAU,wIAA+I8B,EAAa,GAAK,QA+PzLQ,SA5PJ,SAAkBC,EAAcC,GAC5B,IAAKA,EACD,MAAM,IAAIxC,EAAU,qCAExB,IAAKuC,IAAiBA,EAAaE,KAC/B,MAAM,IAAIzC,EAAU,mCAAqCuC,GAE7DA,EAAaE,KAAKf,UAAYa,EAAaG,OAC3CF,EAAIG,GAAGd,cAAcU,EAAaK,UAClC,MAAMC,EAAuCN,EAAaK,UAAyC,IAA7BL,EAAaK,SAAS,GAkC5F,IAAItC,GACAwC,OAAQ,SAAUC,EAAKC,EAAMC,GACzB,KAAKF,GAASC,KAAQD,GAClB,MAAM,IAAI/C,EAAU,IAAMgD,EAAO,oBAAsBD,GAAOE,IAAKA,IAEvE,OAAOF,EAAIC,IAEfE,eAAgB,SAAUC,EAAQC,GAC9B,IAAIC,EAASF,EAAOC,GACpB,OAAc,MAAVC,EACOA,EAEPC,OAAOC,UAAUC,eAAeC,KAAKN,EAAQC,GACtCC,EAEPjD,EAAEsD,gBAAgBL,EAAQ/C,EAAUqD,mBAAoBP,GACjDC,OADX,GAKJO,OAAQ,SAAUhD,EAAQoC,GACtB,MAAMa,EAAMjD,EAAOY,OACnB,IAAK,IAAIjB,EAAI,EAAGA,EAAIsD,EAAKtD,IAErB,GAAc,OADDK,EAAOL,IAAMD,EAAU4C,eAAetC,EAAOL,GAAIyC,IAE1D,OAAOpC,EAAOL,GAAGyC,IAI7Bc,OAAQ,SAAUC,EAASjD,GACvB,MAA0B,mBAAZiD,EAAyBA,EAAQN,KAAK3C,GAAWiD,GAEnEC,iBAAkBjE,EAAMiE,iBACxBC,cAlEJ,SAA8BC,EAASpD,EAASC,GACxCA,EAAQoD,OACRrD,EAAUf,EAAM6B,UAAWd,EAASC,EAAQoD,MACxCpD,EAAQqD,MACRrD,EAAQqD,IAAI,IAAK,IAGzBF,EAAU1B,EAAIG,GAAG0B,eAAeZ,KAAKa,KAAMJ,EAASpD,EAASC,GAC7D,IAAIwD,EAAkBxE,EAAM6B,UAAWb,GACnCyD,MAAOF,KAAKE,MACZb,mBAAoBW,KAAKX,qBAEzBN,EAASb,EAAIG,GAAGsB,cAAcR,KAAKa,KAAMJ,EAASpD,EAASyD,GAK/D,GAJc,MAAVlB,GAAkBb,EAAIiC,UACtB1D,EAAQK,SAASL,EAAQiC,MAAQR,EAAIiC,QAAQP,EAAS3B,EAAamC,gBAAiBlC,GACpFa,EAAStC,EAAQK,SAASL,EAAQiC,MAAMlC,EAASyD,IAEvC,MAAVlB,EAAgB,CAChB,GAAItC,EAAQ4D,OAAQ,CAChB,IAAIC,EAAQvB,EAAOwB,MAAM,MACzB,IAAK,IAAItE,EAAI,EAAGuE,EAAIF,EAAMpD,OAAQjB,EAAIuE,IAC7BF,EAAMrE,IAAMA,EAAI,IAAMuE,GADUvE,IAIrCqE,EAAMrE,GAAKQ,EAAQ4D,OAASC,EAAMrE,GAEtC8C,EAASuB,EAAMG,KAAK,MAExB,OAAO1B,EAEP,MAAM,IAAIrD,EAAU,eAAiBe,EAAQiC,KAAO,6DAqCxDxC,GAAI,SAAUD,GACV,IAAIyE,EAAMzC,EAAahC,GAEvB,OADAyE,EAAItD,UAAYa,EAAahC,EAAI,MAC1ByE,GAEXC,YACA3D,QAAS,SAAUf,EAAGE,EAAMC,EAAqBC,EAAaC,GAC1D,IAAIsE,EAAiBZ,KAAKW,SAAS1E,GAAIC,EAAK8D,KAAK9D,GAAGD,GAMpD,OALIE,GAAQG,GAAUD,GAAeD,EACjCwE,EAAiB7E,EAAYiE,KAAM/D,EAAGC,EAAIC,EAAMC,EAAqBC,EAAaC,GAC1EsE,IACRA,EAAiBZ,KAAKW,SAAS1E,GAAKF,EAAYiE,KAAM/D,EAAGC,IAEtD0E,GAEXzE,KAAM,SAAU0E,EAAO5D,GACnB,KAAO4D,GAAS5D,KACZ4D,EAAQA,EAAMC,QAElB,OAAOD,GAEXE,cAAe,SAAUC,EAAOC,GAC5B,IAAIxC,EAAMuC,GAASC,EAInB,OAHID,GAASC,GAAUD,IAAUC,IAC7BxC,EAAMhD,EAAM6B,UAAW2D,EAAQD,IAE5BvC,GAEX9B,YAAaqC,OAAOkC,SACpB/D,KAAMe,EAAIG,GAAGlB,KACbK,aAAcS,EAAaK,UAE/B,SAASoC,EAAIlE,EAASC,MAClB,IAAIN,EAAOM,EAAQN,KACnBuE,EAAIS,OAAO1E,IACNA,EAAQmD,SAAW3B,EAAamD,UACjCjF,EA8GZ,SAAkBK,EAASL,GAKvB,OAJKA,GAAU,SAAUA,KACrBA,EAAOA,EAAOR,EAAE0F,YAAYlF,OACvBmF,KAAO9E,GAETL,EAnHQoF,CAAS/E,EAASL,IAE7B,IAAIG,EAAQD,EAAc4B,EAAauD,uBAAsBC,EAQ7D,SAAStD,EAAK3B,GACV,MAAO,GAAKyB,EAAaE,KAAKnC,EAAWQ,EAASR,EAAUa,QAASb,EAAUc,SAAUX,EAAME,EAAaC,GAGhH,OAXI2B,EAAayD,YAETpF,EADAG,EAAQH,OACCE,GAAWC,EAAQH,OAAO,IAAME,GAASI,OAAOH,EAAQH,QAAUG,EAAQH,QAEzEE,KAMlB2B,EAAOpB,EAAkBkB,EAAaE,KAAMA,EAAMnC,EAAWS,EAAQH,WAAcH,EAAME,IAC7EG,EAASC,GAoCzB,OAlCAiE,EAAIiB,OAAQ,EACZjB,EAAIS,OAAS,SAAU1E,GACnB,GAAKA,EAAQmD,QAgBT5D,EAAUqD,mBAAqB5C,EAAQ4C,mBACvCrD,EAAUa,QAAUJ,EAAQI,QAC5Bb,EAAUc,SAAWL,EAAQK,SAC7Bd,EAAU4F,WAAanF,EAAQmF,WAC/B5F,EAAUkE,MAAQzD,EAAQyD,UApBR,CAClB,IAAI2B,EAAgBpG,EAAM6B,UAAWY,EAAIrB,QAASJ,EAAQI,UA0GtE,SAAyCgF,EAAe7F,GACpDgD,OAAO8C,KAAKD,GAAeE,QAAQC,IAC/B,IAAIC,EAASJ,EAAcG,GAC3BH,EAAcG,GAGtB,SAAkCC,EAAQjG,GACtC,MAAM4C,EAAiB5C,EAAU4C,eACjC,OAAO/C,EAAEqG,WAAWD,EAAQxF,GACjBhB,EAAM6B,QAASsB,eAAAA,GAAkBnC,IANZ0F,CAAyBF,EAAQjG,KA5GzDoG,CAAgCP,EAAe7F,GAC/CA,EAAUa,QAAUgF,EAChB5D,EAAaoE,aACbrG,EAAUc,SAAWd,EAAU+E,cAActE,EAAQK,SAAUoB,EAAIpB,YAEnEmB,EAAaoE,YAAcpE,EAAaqE,iBACxCtG,EAAU4F,WAAanG,EAAM6B,UAAWY,EAAI0D,WAAYnF,EAAQmF,aAEpE5F,EAAUkE,SACVlE,EAAUqD,mBAAqBvD,EAAEyG,yBAAyB9F,GAC1D,IAAI+F,EAAsB/F,EAAQgG,2BAA6BlE,EAC/D3C,EAAE8G,kBAAkB1G,EAAW,gBAAiBwG,GAChD5G,EAAE8G,kBAAkB1G,EAAW,qBAAsBwG,KAS7D9B,EAAIiC,OAAS,SAAU1G,EAAGE,EAAME,EAAaC,GACzC,GAAI2B,EAAauD,iBAAmBnF,EAChC,MAAM,IAAIX,EAAU,0BAExB,GAAIuC,EAAayD,YAAcpF,EAC3B,MAAM,IAAIZ,EAAU,2BAExB,OAAOK,EAAYC,EAAWC,EAAGgC,EAAahC,GAAIE,EAAM,EAAGE,EAAaC,IAErEoE,GA0FP3E,YAAaA,EACbgE,eA3EJ,SAAwBH,EAASpD,EAASC,GAWtC,OAVKmD,EAMOA,EAAQT,MAAS1C,EAAQiC,OACjCjC,EAAQiC,KAAOkB,EACfA,EAAUnD,EAAQK,SAAS8C,IANvBA,EADiB,mBAAjBnD,EAAQiC,KACEjC,EAAQN,KAAK,iBAEbM,EAAQK,SAASL,EAAQiC,MAMpCkB,GAiEPD,cA/DJ,SAAuBC,EAASpD,EAASC,GACrC,MAAMmG,EAAsBnG,EAAQN,MAAQM,EAAQN,KAAK,iBAKzD,IAAI0G,EACJ,GALApG,EAAQmD,SAAU,EACdnD,EAAQqD,MACRrD,EAAQN,KAAK2G,YAAcrG,EAAQqD,IAAI,IAAMrD,EAAQN,KAAK2G,aAG1DrG,EAAQP,IAAMO,EAAQP,KAAOiB,EAAM,CACnCV,EAAQN,KAAOR,EAAE0F,YAAY5E,EAAQN,MACrC,IAAID,EAAKO,EAAQP,GACjB2G,EAAepG,EAAQN,KAAK,iBAAmB,SAA6BK,EAASC,MAGjF,OAFAA,EAAQN,KAAOR,EAAE0F,YAAY5E,EAAQN,MACrCM,EAAQN,KAAK,iBAAmByG,EACzB1G,EAAGM,EAASC,IAEnBP,EAAGY,WACHL,EAAQK,SAAWrB,EAAM6B,UAAWb,EAAQK,SAAUZ,EAAGY,WAMjE,QAHgB2E,IAAZ7B,GAAyBiD,IACzBjD,EAAUiD,QAEEpB,IAAZ7B,EACA,MAAM,IAAIlE,EAAU,eAAiBe,EAAQiC,KAAO,uBACjD,GAAIkB,aAAmBmD,SAC1B,OAAOnD,EAAQpD,EAASC,IAuC5BU,KAAMA","file":"../runtime.js","sourcesContent":["define([\n    './utils',\n    './exception',\n    './base',\n    './helpers',\n    './internal/wrapHelper',\n    './internal/proto-access'\n], function (Utils, Exception, a, b, c, d) {\n    'use strict';\n    function checkRevision(compilerInfo) {\n        const compilerRevision = compilerInfo && compilerInfo[0] || 1, currentRevision = a.COMPILER_REVISION;\n        if (compilerRevision >= a.LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= a.COMPILER_REVISION) {\n            return;\n        }\n        if (compilerRevision < a.LAST_COMPATIBLE_COMPILER_REVISION) {\n            const runtimeVersions = a.REVISION_CHANGES[currentRevision], compilerVersions = a.REVISION_CHANGES[compilerRevision];\n            throw new Exception('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n        } else {\n            throw new Exception('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n        }\n    }\n    function template(templateSpec, env) {\n        if (!env) {\n            throw new Exception('No environment passed to template');\n        }\n        if (!templateSpec || !templateSpec.main) {\n            throw new Exception('Unknown template object: ' + typeof templateSpec);\n        }\n        templateSpec.main.decorator = templateSpec.main_d;\n        env.VM.checkRevision(templateSpec.compiler);\n        const templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;\n        function invokePartialWrapper(partial, context, options) {\n            if (options.hash) {\n                context = Utils.extend({}, context, options.hash);\n                if (options.ids) {\n                    options.ids[0] = true;\n                }\n            }\n            partial = env.VM.resolvePartial.call(this, partial, context, options);\n            let extendedOptions = Utils.extend({}, options, {\n                hooks: this.hooks,\n                protoAccessControl: this.protoAccessControl\n            });\n            let result = env.VM.invokePartial.call(this, partial, context, extendedOptions);\n            if (result == null && env.compile) {\n                options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n                result = options.partials[options.name](context, extendedOptions);\n            }\n            if (result != null) {\n                if (options.indent) {\n                    let lines = result.split('\\n');\n                    for (let i = 0, l = lines.length; i < l; i++) {\n                        if (!lines[i] && i + 1 === l) {\n                            break;\n                        }\n                        lines[i] = options.indent + lines[i];\n                    }\n                    result = lines.join('\\n');\n                }\n                return result;\n            } else {\n                throw new Exception('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n            }\n        }\n        let container = {\n            strict: function (obj, name, loc) {\n                if (!obj || !(name in obj)) {\n                    throw new Exception('\"' + name + '\" not defined in ' + obj, { loc: loc });\n                }\n                return obj[name];\n            },\n            lookupProperty: function (parent, propertyName) {\n                let result = parent[propertyName];\n                if (result == null) {\n                    return result;\n                }\n                if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n                    return result;\n                }\n                if (d.resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n                    return result;\n                }\n                return undefined;\n            },\n            lookup: function (depths, name) {\n                const len = depths.length;\n                for (let i = 0; i < len; i++) {\n                    let result = depths[i] && container.lookupProperty(depths[i], name);\n                    if (result != null) {\n                        return depths[i][name];\n                    }\n                }\n            },\n            lambda: function (current, context) {\n                return typeof current === 'function' ? current.call(context) : current;\n            },\n            escapeExpression: Utils.escapeExpression,\n            invokePartial: invokePartialWrapper,\n            fn: function (i) {\n                let ret = templateSpec[i];\n                ret.decorator = templateSpec[i + '_d'];\n                return ret;\n            },\n            programs: [],\n            program: function (i, data, declaredBlockParams, blockParams, depths) {\n                let programWrapper = this.programs[i], fn = this.fn(i);\n                if (data || depths || blockParams || declaredBlockParams) {\n                    programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n                } else if (!programWrapper) {\n                    programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n                }\n                return programWrapper;\n            },\n            data: function (value, depth) {\n                while (value && depth--) {\n                    value = value._parent;\n                }\n                return value;\n            },\n            mergeIfNeeded: function (param, common) {\n                let obj = param || common;\n                if (param && common && param !== common) {\n                    obj = Utils.extend({}, common, param);\n                }\n                return obj;\n            },\n            nullContext: Object.seal({}),\n            noop: env.VM.noop,\n            compilerInfo: templateSpec.compiler\n        };\n        function ret(context, options = {}) {\n            let data = options.data;\n            ret._setup(options);\n            if (!options.partial && templateSpec.useData) {\n                data = initData(context, data);\n            }\n            let depths, blockParams = templateSpec.useBlockParams ? [] : undefined;\n            if (templateSpec.useDepths) {\n                if (options.depths) {\n                    depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n                } else {\n                    depths = [context];\n                }\n            }\n            function main(context) {\n                return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n            }\n            main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n            return main(context, options);\n        }\n        ret.isTop = true;\n        ret._setup = function (options) {\n            if (!options.partial) {\n                let mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n                wrapHelpersToPassLookupProperty(mergedHelpers, container);\n                container.helpers = mergedHelpers;\n                if (templateSpec.usePartial) {\n                    container.partials = container.mergeIfNeeded(options.partials, env.partials);\n                }\n                if (templateSpec.usePartial || templateSpec.useDecorators) {\n                    container.decorators = Utils.extend({}, env.decorators, options.decorators);\n                }\n                container.hooks = {};\n                container.protoAccessControl = d.createProtoAccessControl(options);\n                let keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;\n                b.moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n                b.moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n            } else {\n                container.protoAccessControl = options.protoAccessControl;\n                container.helpers = options.helpers;\n                container.partials = options.partials;\n                container.decorators = options.decorators;\n                container.hooks = options.hooks;\n            }\n        };\n        ret._child = function (i, data, blockParams, depths) {\n            if (templateSpec.useBlockParams && !blockParams) {\n                throw new Exception('must pass block params');\n            }\n            if (templateSpec.useDepths && !depths) {\n                throw new Exception('must pass parent depths');\n            }\n            return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n        };\n        return ret;\n    }\n    function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n        function prog(context, options = {}) {\n            let currentDepths = depths;\n            if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n                currentDepths = [context].concat(depths);\n            }\n            return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n        }\n        prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n        prog.program = i;\n        prog.depth = depths ? depths.length : 0;\n        prog.blockParams = declaredBlockParams || 0;\n        return prog;\n    }\n    function resolvePartial(partial, context, options) {\n        if (!partial) {\n            if (options.name === '@partial-block') {\n                partial = options.data['partial-block'];\n            } else {\n                partial = options.partials[options.name];\n            }\n        } else if (!partial.call && !options.name) {\n            options.name = partial;\n            partial = options.partials[partial];\n        }\n        return partial;\n    }\n    function invokePartial(partial, context, options) {\n        const currentPartialBlock = options.data && options.data['partial-block'];\n        options.partial = true;\n        if (options.ids) {\n            options.data.contextPath = options.ids[0] || options.data.contextPath;\n        }\n        let partialBlock;\n        if (options.fn && options.fn !== noop) {\n            options.data = a.createFrame(options.data);\n            let fn = options.fn;\n            partialBlock = options.data['partial-block'] = function partialBlockWrapper(context, options = {}) {\n                options.data = a.createFrame(options.data);\n                options.data['partial-block'] = currentPartialBlock;\n                return fn(context, options);\n            };\n            if (fn.partials) {\n                options.partials = Utils.extend({}, options.partials, fn.partials);\n            }\n        }\n        if (partial === undefined && partialBlock) {\n            partial = partialBlock;\n        }\n        if (partial === undefined) {\n            throw new Exception('The partial ' + options.name + ' could not be found');\n        } else if (partial instanceof Function) {\n            return partial(context, options);\n        }\n    }\n    function noop() {\n        return '';\n    }\n    function initData(context, data) {\n        if (!data || !('root' in data)) {\n            data = data ? a.createFrame(data) : {};\n            data.root = context;\n        }\n        return data;\n    }\n    function executeDecorators(fn, prog, container, depths, data, blockParams) {\n        if (fn.decorator) {\n            let props = {};\n            prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n            Utils.extend(prog, props);\n        }\n        return prog;\n    }\n    function wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n        Object.keys(mergedHelpers).forEach(helperName => {\n            let helper = mergedHelpers[helperName];\n            mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n        });\n    }\n    function passLookupPropertyOption(helper, container) {\n        const lookupProperty = container.lookupProperty;\n        return c.wrapHelper(helper, options => {\n            return Utils.extend({ lookupProperty }, options);\n        });\n    }\n    return {\n        checkRevision: checkRevision,\n        template: template,\n        wrapProgram: wrapProgram,\n        resolvePartial: resolvePartial,\n        invokePartial: invokePartial,\n        noop: noop\n    };\n});"]}