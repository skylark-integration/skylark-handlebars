{"version":3,"sources":["compiler/ast.js"],"names":["define","AST","helpers","helperExpression","node","type","params","length","hash","scopedId","path","test","original","simpleId","parts","depth"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aACA,IAAIC,GACAC,SACIC,iBAAkB,SAAUC,GACxB,MAAqB,kBAAdA,EAAKC,OAA2C,sBAAdD,EAAKC,MAA8C,mBAAdD,EAAKC,UAAiCD,EAAKE,QAAUF,EAAKE,OAAOC,QAAUH,EAAKI,OAElKC,SAAU,SAAUC,GAChB,MAAO,aAAaC,KAAKD,EAAKE,WAElCC,SAAU,SAAUH,GAChB,OAA6B,IAAtBA,EAAKI,MAAMP,SAAiBN,EAAIC,QAAQO,SAASC,KAAUA,EAAKK,SAInF,OAAOd","file":"../../compiler/ast.js","sourcesContent":["define(function () {\n    'use strict';\n    let AST = {\n        helpers: {\n            helperExpression: function (node) {\n                return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);\n            },\n            scopedId: function (path) {\n                return /^\\.|this\\b/.test(path.original);\n            },\n            simpleId: function (path) {\n                return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n            }\n        }\n    };\n    return AST;\n});"]}