{"version":3,"sources":["exception.js"],"names":["define","errorProps","Exception","message","node","line","endLineNumber","column","endColumn","loc","start","end","tmp","Error","prototype","constructor","call","this","idx","length","captureStackTrace","lineNumber","Object","defineProperty","value","enumerable","nop"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aACA,MAAMC,GACF,cACA,WACA,aACA,gBACA,UACA,OACA,SACA,SAEJ,SAASC,EAAUC,EAASC,GACxB,IAA4BC,EAAMC,EAAeC,EAAQC,EAArDC,EAAML,GAAQA,EAAKK,IACnBA,IACAJ,EAAOI,EAAIC,MAAML,KACjBC,EAAgBG,EAAIE,IAAIN,KACxBE,EAASE,EAAIC,MAAMH,OACnBC,EAAYC,EAAIE,IAAIJ,OACpBJ,GAAW,MAAQE,EAAO,IAAME,GAEpC,IAAIK,EAAMC,MAAMC,UAAUC,YAAYC,KAAKC,KAAMd,GACjD,IAAK,IAAIe,EAAM,EAAGA,EAAMjB,EAAWkB,OAAQD,IACvCD,KAAKhB,EAAWiB,IAAQN,EAAIX,EAAWiB,IAEvCL,MAAMO,mBACNP,MAAMO,kBAAkBH,KAAMf,GAElC,IACQO,IACAQ,KAAKI,WAAahB,EAClBY,KAAKX,cAAgBA,EACjBgB,OAAOC,gBACPD,OAAOC,eAAeN,KAAM,UACxBO,MAAOjB,EACPkB,YAAY,IAEhBH,OAAOC,eAAeN,KAAM,aACxBO,MAAOhB,EACPiB,YAAY,MAGhBR,KAAKV,OAASA,EACdU,KAAKT,UAAYA,IAG3B,MAAOkB,KAIb,OADAxB,EAAUY,UAAY,IAAID,MACnBX","file":"../exception.js","sourcesContent":["define(function () {\n    'use strict';\n    const errorProps = [\n        'description',\n        'fileName',\n        'lineNumber',\n        'endLineNumber',\n        'message',\n        'name',\n        'number',\n        'stack'\n    ];\n    function Exception(message, node) {\n        let loc = node && node.loc, line, endLineNumber, column, endColumn;\n        if (loc) {\n            line = loc.start.line;\n            endLineNumber = loc.end.line;\n            column = loc.start.column;\n            endColumn = loc.end.column;\n            message += ' - ' + line + ':' + column;\n        }\n        let tmp = Error.prototype.constructor.call(this, message);\n        for (let idx = 0; idx < errorProps.length; idx++) {\n            this[errorProps[idx]] = tmp[errorProps[idx]];\n        }\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, Exception);\n        }\n        try {\n            if (loc) {\n                this.lineNumber = line;\n                this.endLineNumber = endLineNumber;\n                if (Object.defineProperty) {\n                    Object.defineProperty(this, 'column', {\n                        value: column,\n                        enumerable: true\n                    });\n                    Object.defineProperty(this, 'endColumn', {\n                        value: endColumn,\n                        enumerable: true\n                    });\n                } else {\n                    this.column = column;\n                    this.endColumn = endColumn;\n                }\n            }\n        } catch (nop) {\n        }\n    }\n    Exception.prototype = new Error();\n    return Exception;\n});"]}